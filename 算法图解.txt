二分查找法
	二分查找法所需的时间为O（logn)底数为2对数时间，逐个查找所需的时间为O(n)线性时间
	只用于有序元素列表
大O表示法
	算法的速度指的并非时间，而是操作数的增速
	谈论算法的速度时，是随着输入的增加，其运行时间将以什么样的速度增加
	算法的运行时间用大O表示法表示
	O(logn)比O(n)快，当需要搜索的元素越多时，前者比后者快的越多
	
数组与链表
	数组：读取-O(1),插入-O(n)(线性时间),删除-O(n)
	链表：读取-O(n),插入-O(1)(常量时间),删除-O(1)
	数组容易浪费内存空间，分配的内存空间有限，当超过了被分配的空间，就要再次分配
		每个元素所占的位置都是已知的，插入慢，读取快
	链表每个元素的位置都要先知道上一个元素的位置才能知晓，但是节省内存空间，插入快，读取慢
		中间插入和删除，链表是更好的选择
	顺序访问：从第一个元素开始逐个地读取元素（链表）
	随机访问：可根据元素位置直接读取元素（数组）
	计算机内存犹如一大堆抽屉
	需要存储多个元素时，可使用数组或链表
	数组的元素都在一起
	链表的元素是分开的，其中每个元素都存储了下一个元素的地址
	数组的读取速度很快
	链表的插入和删除速度很快
	在同一个数组中，所有元素的类型都必须相同

递归
	如果使用循环，程序的性能可能更高，如果使用递归，程序可能更容易理解。如果选择要看什么对你来说更重要
	递归函数包括两部分：基线条件和递归条件
			递归条件指函数调用自己
			基线条件指函数不再调用自己，从而避免形成无限循环
	递归指的是调用自己的函数
	栈有两种操作：压入和弹出
	所有函数调用都进入调用栈
	调用栈可能很长，这将占用大量的内存
	编写涉及数组的递归函数时，基线条件通常时数组为空或只包含一个元素